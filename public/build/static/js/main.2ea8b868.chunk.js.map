{"version":3,"sources":["models/api.ts","services/dataService.ts","theme/Theme.ts","components/Loader/__types/LoaderValues.ts","components/Loader/styles/index.ts","components/Loader/Loader.tsx","components/ApiSuspense/ApiSuspense.tsx","components/Card/styles/index.ts","components/Card/Card.tsx","screens/Dashboard/Chatter/Chatter.tsx","screens/Dashboard/Chatter/styles/index.ts","screens/Dashboard/DashboardComponent.tsx","screens/Dashboard/styles/index.ts","App.tsx","App.styles.ts","serviceWorker.ts","index.tsx"],"names":["API","api","axios","create","baseURL","timeout","headers","Content-Type","LoaderValues","Theme","react","height","width","display","animation","animationDuration","concat","styles","container","position","top","left","barsContainer","textAlign","fontSize","@keyframes blockAnimation","0%, 40%, 100%","transform","20%","defaultRect","backgroundColor","_ref","color","extend","rect2","_ref2","animationDelay","react2Delay","rect3","_ref3","react3Delay","rect4","_ref4","react4Delay","rect5","_ref5","react5Delay","injectSheet","classes","react_default","a","createElement","className","ApiSuspense","apiState","children","REQUEST_PENDING","components_Loader_Loader","boxShadow","minHeight","padding","React","memo","heading","fontWeight","detail","margin","source","bottom","right","requestState","components_Card_Card","components_ApiSuspense_ApiSuspense","href","target","DashboardComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","error","get","res","data","setState","REQUEST_SUCCESS","_context","t0","REQUEST_ERROR","_this$state","header","Dashboard_Chatter_Chatter","flexDirection","justifyContent","alignItems","fontStyle","@global","html, body, #root","fontFamily","Dashboard_DashboardComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2ea8b868.chunk.js","sourcesContent":["export enum API {\n\tNOT_REQUESTED = \"API_NOT_REQUESTED\",\n\tREQUEST_PENDING = \"API_REQUEST_PENDING\",\n\tREQUEST_SUCCESS = \"API_REQUEST_SUCCESS\",\n\tREQUEST_ERROR = \"API_REQUEST_ERROR\"\n}\n","// tslint:disable:no-object-mutation\n\nimport axios, { AxiosPromise } from \"axios\"\n\nexport const appBaseUrl =\n\tprocess.env.NODE_ENV !== \"production\" ? \"http://localhost:3000\" : \"https://random-chatter.azurewebsites.net/\"\n\nconst api = axios.create({\n\tbaseURL: appBaseUrl,\n\ttimeout: 15000,\n\theaders: {\n\t\t\"Content-Type\": \"application/json\"\n\t}\n})\n\nexport function getChatter(): AxiosPromise {\n\treturn api.get(\"/chatter\")\n}\n","export const Theme = {\n\tprimary: \"#fdbb6d\",\n\tsecondary: \"#475c7b\"\n}\n","export enum LoaderValues {\n\tanimationDuration = 1.2,\n\treact2Delay = 0.1,\n\treact3Delay = 0.2,\n\treact4Delay = 0.3,\n\treact5Delay = 0.4\n}\n","import { Theme } from \"../../../theme\"\nimport { IProps } from \"../__types/IProps\"\nimport { IReactStyle } from \"../__types/IReactStyle\"\nimport { LoaderValues } from \"../__types/LoaderValues\"\n\nconst react: IReactStyle = {\n\theight: \"100%\",\n\twidth: 6,\n\tdisplay: \"inline-block\",\n\tanimation: \"blockAnimation 1.2s infinite ease-in-out\",\n\tanimationDuration: `${LoaderValues.animationDuration}s`\n}\n\n// tslint:disable-next-line:no-any\nexport const styles: any = {\n\tcontainer: {\n\t\tposition: \"relative\",\n\t\ttop: \"45%\",\n\t\tleft: \"45%\"\n\t},\n\tbarsContainer: {\n\t\twidth: 50,\n\t\ttextAlign: \"center\",\n\t\tfontSize: 10,\n\t\theight: 30\n\t},\n\t\"@keyframes blockAnimation\": {\n\t\t\"0%, 40%, 100%\": { transform: \"scaleY(0.4)\" },\n\t\t\"20%\": { transform: \"scaleY(1)\" }\n\t},\n\tdefaultRect: {\n\t\tbackgroundColor: ({ color }: IProps): string => color || Theme.primary,\n\t\textend: react\n\t},\n\trect2: {\n\t\textend: react,\n\t\tbackgroundColor: ({ color }: IProps): string => color || Theme.primary,\n\t\tanimationDelay: `-${LoaderValues.animationDuration - LoaderValues.react2Delay}s`\n\t},\n\trect3: {\n\t\textend: react,\n\t\tbackgroundColor: ({ color }: IProps): string => color || Theme.primary,\n\t\tanimationDelay: `-${LoaderValues.animationDuration - LoaderValues.react3Delay}s`\n\t},\n\trect4: {\n\t\textend: react,\n\t\tbackgroundColor: ({ color }: IProps): string => color || Theme.primary,\n\t\tanimationDelay: `-${LoaderValues.animationDuration - LoaderValues.react4Delay}s`\n\t},\n\trect5: {\n\t\textend: react,\n\t\tbackgroundColor: ({ color }: IProps): string => color || Theme.primary,\n\t\tanimationDelay: `-${LoaderValues.animationDuration - LoaderValues.react5Delay}s`\n\t}\n}\n","import React from \"react\"\nimport injectSheet from \"react-jss\"\n\nimport { IProps } from \"./__types/IProps\"\n\nimport { styles } from \"./styles\"\n\nconst Loader: React.SFC<IProps> = ({ classes }: IProps): JSX.Element => (\n\t<div className={classes.container}>\n\t\t<div className={classes.barsContainer}>\n\t\t\t<div className={classes.defaultRect} />\n\t\t\t<div className={classes.rect2} />\n\t\t\t<div className={classes.rect3} />\n\t\t\t<div className={classes.rect4} />\n\t\t\t<div className={classes.rect5} />\n\t\t</div>\n\t</div>\n)\nexport default injectSheet(styles)(Loader)\n","import * as React from \"react\"\nimport { API } from \"../../models/api\"\nimport Loader from \"../Loader/Loader\"\nimport { IProps } from \"./__types/IProps\"\n\nconst ApiSuspense = ({ apiState, children }: IProps) => {\n\tif (apiState === API.REQUEST_PENDING) {\n\t\treturn <Loader />\n\t}\n\n\treturn <>{children}</>\n}\n\nexport default ApiSuspense\n","import { Styles } from \"react-jss\"\nimport { Theme } from \"../../../theme\"\n\nexport const styles: Styles = {\n\tcontainer: {\n\t\tboxShadow: \"0 1px 15px rgba(27,31,35,.15)\",\n\t\twidth: \"50%\",\n\t\tminHeight: \"50%\",\n\t\tpadding: 15,\n\t\tposition: \"relative\",\n\t\tbackgroundColor: Theme.secondary,\n\t\tcolor: \"#fff\"\n\t}\n}\n","import * as React from \"react\"\nimport injectSheet from \"react-jss\"\nimport { styles } from \"./styles\"\nimport { IProps } from \"./__types/IProps\"\n\nconst Card = ({ children, classes }: IProps) => <div className={classes.container}>{children}</div>\n\nexport default React.memo(injectSheet(styles)(Card))\n","import React from \"react\"\nimport injectSheet from \"react-jss\"\nimport ApiSuspense from \"../../../components/ApiSuspense/ApiSuspense\"\nimport Card from \"../../../components/Card/Card\"\nimport { styles } from \"./styles\"\nimport { IProps } from \"./__types/IProps\"\n\nconst Chatter = ({ heading, detail, source, requestState, classes }: IProps) => {\n\treturn (\n\t\t<Card>\n\t\t\t<ApiSuspense apiState={requestState}>\n\t\t\t\t<div className={classes.heading}>{heading}</div>\n\t\t\t\t<div className={classes.detail}>{detail}</div>\n\t\t\t\t<div className={classes.source}>\n\t\t\t\t\t<a href={source} target=\"_blank\">\n\t\t\t\t\t\tSource\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</ApiSuspense>\n\t\t</Card>\n\t)\n}\n\nexport default React.memo(injectSheet(styles)(Chatter))\n","import { Styles } from \"react-jss\"\n\nexport const styles: Styles = {\n\tcontainer: {},\n\theading: {\n\t\tfontSize: 28,\n\t\tfontWeight: 500\n\t},\n\tdetail: {\n\t\tmargin: \"15px 0\"\n\t},\n\tsource: {\n\t\tposition: \"absolute\",\n\t\tbottom: 25,\n\t\tright: 25\n\t}\n}\n","import * as React from \"react\"\nimport injectSheet from \"react-jss\"\nimport { API } from \"../../models/api\"\nimport { getChatter } from \"../../services/dataService\"\nimport Chatter from \"./Chatter/Chatter\"\nimport { styles } from \"./styles\"\nimport { IProps } from \"./__types/IProps\"\nimport { IState } from \"./__types/IState\"\n\nclass DashboardComponent extends React.Component<IProps, IState> {\n\tpublic constructor(props: IProps) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\theading: \"\",\n\t\t\tdetail: \"\",\n\t\t\tsource: \"\",\n\t\t\terror: \"\",\n\t\t\trequestState: API.REQUEST_PENDING\n\t\t}\n\t}\n\n\tpublic async componentDidMount(): Promise<void> {\n\t\ttry {\n\t\t\tconst res = await getChatter()\n\t\t\tconst { heading, detail, source } = res.data\n\n\t\t\tthis.setState({ heading, detail, source, requestState: API.REQUEST_SUCCESS })\n\t\t} catch (e) {\n\t\t\tthis.setState({ error: e, requestState: API.REQUEST_ERROR })\n\t\t}\n\t}\n\n\tpublic render(): JSX.Element {\n\t\tconst { classes } = this.props\n\t\tconst { heading, detail, source, requestState } = this.state\n\n\t\treturn (\n\t\t\t<div className={classes.container}>\n\t\t\t\t<div className={classes.header}>Random Chatter</div>\n\t\t\t\t<Chatter heading={heading} detail={detail} source={source} requestState={requestState} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default injectSheet(styles)(DashboardComponent)\n","import { Styles } from \"react-jss\"\n\nexport const styles: Styles = {\n\tcontainer: {\n\t\theight: \"calc(100% - 40px)\",\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\"\n\t},\n\theader: {\n\t\tfontStyle: \"italic\",\n\t\tfontSize: 36,\n\t\tfontWeight: 600\n\t}\n}\n","import * as React from \"react\"\nimport injectSheet from \"react-jss\"\nimport { styles } from \"./App.styles\"\nimport DashboardComponent from \"./screens/Dashboard/DashboardComponent\"\n\nconst App = () => <DashboardComponent />\n\nexport default injectSheet(styles)(App)\n","import { Styles } from \"react-jss\"\n\nexport const styles: Styles = {\n\t\"@global\": {\n\t\t\"html, body, #root\": {\n\t\t\tfontFamily: \"Roboto,Sans-serif,serif\",\n\t\t\theight: \"100%\"\n\t\t}\n\t}\n}\n","// tslint:disable\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport default function register() {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString())\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Lets check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl: string) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker) {\n\t\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t\t// It's the perfect time to display a 'New content is\n\t\t\t\t\t\t\t\t// available; please refresh.' message in your web app.\n\t\t\t\t\t\t\t\tconsole.log(\"New content is available; please refresh.\")\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t\t// 'Content is cached for offline use.' message.\n\t\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (response.status === 404 || response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\"No internet connection found. App is running in offline mode.\")\n\t\t})\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nif (process.env.NODE_ENV !== \"production\") {\n\t// TODO: Use this to check unnecessary dom updates and optimize react\n\t// tslint:disable:no-require-imports\n\t// tslint:disable-next-line:no-var-requires\n\t// Const { whyDidYouUpdate } = require(\"why-did-you-update\")\n\t// WhyDidYouUpdate(React)\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// Unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister()\n"],"sourceRoot":""}